// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Szkola_Server.Pages.CustomQuerries
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Szkola_Server;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Szkola_Server.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\_Imports.razor"
using Npgsql;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/CustomQuerries/Nauczyciele_Klasy")]
    public partial class Nauczyciele_Klasy : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 43 "C:\Users\PC\source\repos\Szkola_Server\Szkola_Server\Pages\CustomQuerries\Nauczyciele_Klasy.razor"
       
    private List<klasy_nauczyciele> klasaNauczycieleLista;
    private NpgsqlConnection connection;
    private NpgsqlDataReader reader;
    private string labelID;
    private string labelIDKlasy;
    private string labelIDNauczyciela;

    private string message = "";

    // Łączenie się z bazą sql poprzez użycie NPGSql
    protected override async Task OnInitializedAsync()
    {
        try
        {
            labelID = "";
            labelIDKlasy = "";
            labelIDNauczyciela = "";
            klasaNauczycieleLista = new List<klasy_nauczyciele>();
            connection = new NpgsqlConnection("Host=localhost;Database=szkola;Username=postgres;Password=czarnykot;Persist Security Info=True");
            connection.Open();
            querry("SELECT klasy_nauczyciele.id, klasy_nauczyciele.id_klasa, klasy_nauczyciele.id_nauczyciel, klasy.nazwa_klasy, nauczyciele.imie, nauczyciele.nazwisko FROM klasy_nauczyciele, klasy, nauczyciele WHERE klasy_nauczyciele.id_klasa = klasy.id AND klasy_nauczyciele.id_nauczyciel = nauczyciele.id");
        }
        catch (Exception e)
        {
            message = "Init: " + e.Message;
            Console.WriteLine(e.Message);
        }

    }


    /// <summary>
    /// Metoda wysyłająca kod SQL z instrukcjami co do servera SQL. Może prosić o dane, tworzyć nowe tabele
    /// usuwać albo edytować
    /// </summary>
    /// <param name="querry">Linia zawierająca kod SQLa</param>
    protected void querry(string querry)
    {
        try
        {
            klasaNauczycieleLista.Clear();
            NpgsqlCommand cmd = new NpgsqlCommand(querry, connection);
            reader = cmd.ExecuteReader();

            // Jeżeli reader dostał informacje spowrotem kod przekształca dane w tabele
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    klasy_nauczyciele st = new klasy_nauczyciele();
                    st.id = Int32.Parse(reader[0].ToString());
                    st.id_klasy = Int32.Parse(reader[1].ToString());
                    st.id_nauczyciela = Int32.Parse(reader[2].ToString());
                    st.nazwaKlasy = reader[3].ToString();
                    st.imieNauczyciela = reader[4].ToString() + " " + reader[5].ToString();


                    klasaNauczycieleLista.Add(st);
                }
                StateHasChanged();
            }
            reader.Close();
        }
        catch (Exception e)
        {
            message = "Querry: " + querry + " " + e.Message;
            Console.WriteLine(e.Message);
        }
    }

    // Wyszukiwanie informacji na podstawie wpisanych danych przez użytkownika.
    // Metoda tworzy kod SQL jako 'stringQuerry' i wysyła kod do querry()
    protected void search()
    {
        string stringQuerry = "SELECT klasy_nauczyciele.id, klasy_nauczyciele.id_klasa, klasy_nauczyciele.id_nauczyciel, klasy.nazwa_klasy, nauczyciele.imie, nauczyciele.nazwisko FROM klasy_nauczyciele, klasy, nauczyciele WHERE klasy_nauczyciele.id_klasa = klasy.id AND klasy_nauczyciele.id_nauczyciel = nauczyciele.id";
        if (!labelID.Equals("")) {
            stringQuerry += $" AND klasy_nauczyciele.id_klasa='{labelID}'";
        }
        if (!labelIDKlasy.Equals(""))
        {
            stringQuerry += $" AND klasy_nauczyciele.id_klasa='{labelIDKlasy}'";
        }
        if (!labelIDNauczyciela.Equals(""))
        {
            stringQuerry += $" AND klasy_nauczyciele.id_nauczyciel='{labelIDNauczyciela}' ";
        }
        querry(stringQuerry);
    }

    // Wyszukaj największej liczby ID i ją oddaje. Do wykorzystania podczas tworzenia nowego wpisu do tabeli
    public int getMaxID()
    {
        try
        {
            int maxID = 0;
            NpgsqlCommand cmd = new NpgsqlCommand("SELECT Max(id) FROM klasy_nauczyciele", connection);
            reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    maxID = Int32.Parse(reader[0].ToString());
                }
            }
            reader.Close();
            return maxID;
        }
        catch (Exception e)
        {
            message = e.Message;
            return 1;
        }
    }

    // Stwórz nowy wpis do tabeli
    public void create()
    {
        if (!labelIDKlasy.Equals("") && !labelIDNauczyciela.Equals(""))
        {
            querry($"INSERT INTO klasy_nauczyciele VALUES ('{getMaxID()+1}', '{labelIDKlasy}', '{labelIDNauczyciela}')");
            querry("SELECT klasy_nauczyciele.id, klasy_nauczyciele.id_klasa, klasy_nauczyciele.id_nauczyciel, klasy.nazwa_klasy, nauczyciele.imie, nauczyciele.nazwisko FROM klasy_nauczyciele, klasy, nauczyciele WHERE klasy_nauczyciele.id_klasa = klasy.id AND klasy_nauczyciele.id_nauczyciel = nauczyciele.id");
        }
    }

    // Usuń wpis z tabeli
    public void delete()
    {
        if (!labelID.Equals(""))
        {
            querry($"DELETE FROM klasy_nauczyciele WHERE id='{labelID}'");
            querry("SELECT klasy_nauczyciele.id, klasy_nauczyciele.id_klasa, klasy_nauczyciele.id_nauczyciel, klasy.nazwa_klasy, nauczyciele.imie, nauczyciele.nazwisko FROM klasy_nauczyciele, klasy, nauczyciele WHERE klasy_nauczyciele.id_klasa = klasy.id AND klasy_nauczyciele.id_nauczyciel = nauczyciele.id");
        }
    }

    // Klasa przechowuje dane z tabeli
    public class klasy_nauczyciele
    {
        public int id { get; set; }
        public int id_klasy { get; set; }
        public string nazwaKlasy { get; set; }
        public int id_nauczyciela { get; set; }
        public string imieNauczyciela { get; set; }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
